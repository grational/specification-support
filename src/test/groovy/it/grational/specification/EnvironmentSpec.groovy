package it.grational.specification

import spock.lang.*

/**
 * This Spock specification was auto generated by 'gigawatt'
 * @author d7392
 * @date 02-08-2018 07.39
 */
class EnvironmentSpec extends Specification {

	def "Should correctly set 3 environment variables"() {
		setup: 'define three generic variables'
			def env1 = 'value1'
			def env2 = 'value2'
			def env3 = 'value3'
		and: 'setup a new Environment object with 3 key/value pairs'
			def environment = new Environment(
				ENV_1: env1,
				ENV_2: env2,
				ENV_3: env3
			)
		when: 'we insert the key/value pairs into the environment through the insert method'
			environment.insert()
		then:
			System.getenv().ENV_1 == env1
			System.getenv().ENV_2 == env2
			System.getenv().ENV_3 == env3
		when: 'after cleaning the env'
			environment.clean()
		then: 'the previously set variables does not exists anymore'
			! System.getenv().ENV_1
			! System.getenv().ENV_2
			! System.getenv().ENV_3
	}

	def "Should work also when the env variables are of Gstring type"() {
		setup:
			def prefix = 'PREFIX'
		and:
			def environment = new Environment (
				"${prefix}_1": 'env1',
				"${prefix}_2": 'env2',
				"${prefix}_3": 'env3'
			)

		when: 'we insert the key/value pairs into the environment through the insert method'
			environment.insert()
		then:
			System.getenv()."${prefix}_1" == 'env1'
			System.getenv()."${prefix}_2" == 'env2'
			System.getenv()."${prefix}_3" == 'env3'

		when: 'after cleaning the env'
			environment.clean()
		then: 'the previously set variables does not exists anymore'
			! System.getenv()."${prefix}_1"
			! System.getenv()."${prefix}_2"
			! System.getenv()."${prefix}_3"
	}

	def "Should also work with the new insert method with an explicit key and value"() {
		given:
			String key = 'env_key'
			String value = 'env_value'

		when:
			def environment = new Environment()
		then:
			! System.getenv()."$key"

		when:
			environment.insert(key, value)
		then:
			System.getenv()."$key" == "$value"

		when:
			environment.clean()
		then:
			! System.getenv()."$key"
	}

}
